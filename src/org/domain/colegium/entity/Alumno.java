package org.domain.colegium.entity;
// Generated Mar 13, 2012 10:24:56 AM by Hibernate Tools 3.4.0.CR1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.validator.NotNull;

/**
 * Alumno generated by hbm2java
 */
@Entity
@Table(name="alumno"
)
public class Alumno  implements java.io.Serializable {


     /**
	 * 
	 */
	private static final long serialVersionUID = 8931456773458268445L;
	/**
	 * 
	 */

	
	private long idPersona;
     private Colegio colegio;
     private Persona persona;
     private Set<Asistencia> asistencias = new HashSet<Asistencia>(0);
     private Set<MatriculaAlumno> matriculaAlumnos = new HashSet<MatriculaAlumno>(0);
     private Set<ResumenAlumno> resumenAlumnos = new HashSet<ResumenAlumno>(0);
     private PeriodoAcademicoSeccionCursoNota periodoAcademicoSeccionCursoNota;
     private Set<EvaluacionAlumno> evaluacionAlumnos = new HashSet<EvaluacionAlumno>(0);
     private Set<AsignacionAlumno> asignacionAlumnos = new HashSet<AsignacionAlumno>(0);
     private Set<ReciboPension> reciboPensions = new HashSet<ReciboPension>(0);
     private Set<Apoderado> apoderados = new HashSet<Apoderado>(0);
     private Set<LibretaNotas> libretaNotases = new HashSet<LibretaNotas>(0);

    public Alumno() {
    }

	
    public Alumno(Colegio colegio, Persona persona) {
        this.colegio = colegio;
        this.persona = persona;
    }
    public Alumno(Colegio colegio, Persona persona, Set<Asistencia> asistencias, Set<MatriculaAlumno> matriculaAlumnos, Set<ResumenAlumno> resumenAlumnos, PeriodoAcademicoSeccionCursoNota periodoAcademicoSeccionCursoNota, Set<EvaluacionAlumno> evaluacionAlumnos, Set<AsignacionAlumno> asignacionAlumnos, Set<ReciboPension> reciboPensions, Set<Apoderado> apoderados, Set<LibretaNotas> libretaNotases) {
       this.colegio = colegio;
       this.persona = persona;
       this.asistencias = asistencias;
       this.matriculaAlumnos = matriculaAlumnos;
       this.resumenAlumnos = resumenAlumnos;
       this.periodoAcademicoSeccionCursoNota = periodoAcademicoSeccionCursoNota;
       this.evaluacionAlumnos = evaluacionAlumnos;
       this.asignacionAlumnos = asignacionAlumnos;
       this.reciboPensions = reciboPensions;
       this.apoderados = apoderados;
       this.libretaNotases = libretaNotases;
    }
   
    //@GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="persona"))
    @Id 
    //@GeneratedValue(generator="generator")
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    //@GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="persona"))
    @Column(name="id_persona", unique=true, nullable=false)
    public long getIdPersona() {
        return this.idPersona;
    }
    
    public void setIdPersona(long idPersona) {
        this.idPersona = idPersona;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_colegio", nullable=false)
    @NotNull
    public Colegio getColegio() {
        return this.colegio;
    }
    
    public void setColegio(Colegio colegio) {
        this.colegio = colegio;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    @NotNull
    public Persona getPersona() {
        return this.persona;
    }
    
    public void setPersona(Persona persona) {
        this.persona = persona;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="alumno")
    public Set<Asistencia> getAsistencias() {
        return this.asistencias;
    }
    
    public void setAsistencias(Set<Asistencia> asistencias) {
        this.asistencias = asistencias;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="alumno")
    public Set<MatriculaAlumno> getMatriculaAlumnos() {
        return this.matriculaAlumnos;
    }
    
    public void setMatriculaAlumnos(Set<MatriculaAlumno> matriculaAlumnos) {
        this.matriculaAlumnos = matriculaAlumnos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="alumno")
    public Set<ResumenAlumno> getResumenAlumnos() {
        return this.resumenAlumnos;
    }
    
    public void setResumenAlumnos(Set<ResumenAlumno> resumenAlumnos) {
        this.resumenAlumnos = resumenAlumnos;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="alumno")
    public PeriodoAcademicoSeccionCursoNota getPeriodoAcademicoSeccionCursoNota() {
        return this.periodoAcademicoSeccionCursoNota;
    }
    
    public void setPeriodoAcademicoSeccionCursoNota(PeriodoAcademicoSeccionCursoNota periodoAcademicoSeccionCursoNota) {
        this.periodoAcademicoSeccionCursoNota = periodoAcademicoSeccionCursoNota;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="alumno")
    public Set<EvaluacionAlumno> getEvaluacionAlumnos() {
        return this.evaluacionAlumnos;
    }
    
    public void setEvaluacionAlumnos(Set<EvaluacionAlumno> evaluacionAlumnos) {
        this.evaluacionAlumnos = evaluacionAlumnos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="alumno")
    public Set<AsignacionAlumno> getAsignacionAlumnos() {
        return this.asignacionAlumnos;
    }
    
    public void setAsignacionAlumnos(Set<AsignacionAlumno> asignacionAlumnos) {
        this.asignacionAlumnos = asignacionAlumnos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="alumno")
    public Set<ReciboPension> getReciboPensions() {
        return this.reciboPensions;
    }
    
    public void setReciboPensions(Set<ReciboPension> reciboPensions) {
        this.reciboPensions = reciboPensions;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="alumno_apoderado", joinColumns = { 
        @JoinColumn(name="id_persona_alumno", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="id_persona_apoderado", nullable=false, updatable=false) })
    public Set<Apoderado> getApoderados() {
        return this.apoderados;
    }
    
    public void setApoderados(Set<Apoderado> apoderados) {
        this.apoderados = apoderados;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="alumno")
    public Set<LibretaNotas> getLibretaNotases() {
        return this.libretaNotases;
    }
    
    public void setLibretaNotases(Set<LibretaNotas> libretaNotases) {
        this.libretaNotases = libretaNotases;
    }




}


