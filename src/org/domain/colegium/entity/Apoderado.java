package org.domain.colegium.entity;
// Generated Mar 13, 2012 10:24:56 AM by Hibernate Tools 3.4.0.CR1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.validator.NotNull;

/**
 * Apoderado generated by hbm2java
 */
@Entity
@Table(name="apoderado"
)
public class Apoderado  implements java.io.Serializable {


     /**
	 * 
	 */
	private static final long serialVersionUID = 1725791021203151573L;
	/**
	 * 
	 */
	
	private long idPersona;
     private TipoApoderado tipoApoderado;
     private Persona persona;
     private Set<Alumno> alumnos = new HashSet<Alumno>(0);

    public Apoderado() {
    }

	
    public Apoderado(TipoApoderado tipoApoderado, Persona persona) {
        this.tipoApoderado = tipoApoderado;
        this.persona = persona;
    }
    public Apoderado(TipoApoderado tipoApoderado, Persona persona, Set<Alumno> alumnos) {
       this.tipoApoderado = tipoApoderado;
       this.persona = persona;
       this.alumnos = alumnos;
    }
   
     //@GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="persona"))
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    //@GeneratedValue(generator="generator")
    @Column(name="id_persona", unique=true, nullable=false)
    public long getIdPersona() {
        return this.idPersona;
    }
    
    public void setIdPersona(long idPersona) {
        this.idPersona = idPersona;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_tipo_apoderado", nullable=false)
    @NotNull
    public TipoApoderado getTipoApoderado() {
        return this.tipoApoderado;
    }
    
    public void setTipoApoderado(TipoApoderado tipoApoderado) {
        this.tipoApoderado = tipoApoderado;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    @NotNull
    public Persona getPersona() {
        return this.persona;
    }
    
    public void setPersona(Persona persona) {
        this.persona = persona;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="alumno_apoderado", joinColumns = { 
        @JoinColumn(name="id_persona_apoderado", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="id_persona_alumno", nullable=false, updatable=false) })
    public Set<Alumno> getAlumnos() {
        return this.alumnos;
    }
    
    public void setAlumnos(Set<Alumno> alumnos) {
        this.alumnos = alumnos;
    }




}


