package org.domain.colegium.entity;
// Generated Mar 13, 2012 10:24:56 AM by Hibernate Tools 3.4.0.CR1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Persona generated by hbm2java
 */
@Entity
@Table(name="persona"
)
public class Persona  implements java.io.Serializable {


     private long idPersona;
     private String primerNombre;
     private Date fechaNacimiento;
     private String segundoNombre;
     private String apellidoPaterno;
     private String apellidoMaterno;
     private String codigo;
     private String usuario;
     private String password;
     private Apoderado apoderado;
     private Set<FotoPersona> fotoPersonas = new HashSet<FotoPersona>(0);
     private Set<Mensaje> mensajes = new HashSet<Mensaje>(0);
     private Set<PersonaMedioContacto> personaMedioContactos = new HashSet<PersonaMedioContacto>(0);
     private Set<Permiso> permisosForIdPersona = new HashSet<Permiso>(0);
     private Set<MensajeDestinatario> mensajeDestinatarios = new HashSet<MensajeDestinatario>(0);
     private Set<Permiso> permisosForPersonaIdRegistro = new HashSet<Permiso>(0);
     private Docente docente;
     private Alumno alumno;

    public Persona() {
    }

	
    public Persona(long idPersona, String primerNombre, Date fechaNacimiento, String apellidoPaterno, String apellidoMaterno, String codigo, String password) {
        this.idPersona = idPersona;
        this.primerNombre = primerNombre;
        this.fechaNacimiento = fechaNacimiento;
        this.apellidoPaterno = apellidoPaterno;
        this.apellidoMaterno = apellidoMaterno;
        this.codigo = codigo;
        this.password = password;
    }
    public Persona(long idPersona, String primerNombre, Date fechaNacimiento, String segundoNombre, String apellidoPaterno, String apellidoMaterno, String codigo, String usuario, String password, Apoderado apoderado, Set<FotoPersona> fotoPersonas, Set<Mensaje> mensajes, Set<PersonaMedioContacto> personaMedioContactos, Set<Permiso> permisosForIdPersona, Set<MensajeDestinatario> mensajeDestinatarios, Set<Permiso> permisosForPersonaIdRegistro, Docente docente, Alumno alumno) {
       this.idPersona = idPersona;
       this.primerNombre = primerNombre;
       this.fechaNacimiento = fechaNacimiento;
       this.segundoNombre = segundoNombre;
       this.apellidoPaterno = apellidoPaterno;
       this.apellidoMaterno = apellidoMaterno;
       this.codigo = codigo;
       this.usuario = usuario;
       this.password = password;
       this.apoderado = apoderado;
       this.fotoPersonas = fotoPersonas;
       this.mensajes = mensajes;
       this.personaMedioContactos = personaMedioContactos;
       this.permisosForIdPersona = permisosForIdPersona;
       this.mensajeDestinatarios = mensajeDestinatarios;
       this.permisosForPersonaIdRegistro = permisosForPersonaIdRegistro;
       this.docente = docente;
       this.alumno = alumno;
    }
   
     @Id 

    
    @Column(name="id_persona", unique=true, nullable=false)
    public long getIdPersona() {
        return this.idPersona;
    }
    
    public void setIdPersona(long idPersona) {
        this.idPersona = idPersona;
    }

    
    @Column(name="primer_nombre", nullable=false)
    @NotNull
    public String getPrimerNombre() {
        return this.primerNombre;
    }
    
    public void setPrimerNombre(String primerNombre) {
        this.primerNombre = primerNombre;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="fecha_nacimiento", nullable=false, length=13)
    @NotNull
    public Date getFechaNacimiento() {
        return this.fechaNacimiento;
    }
    
    public void setFechaNacimiento(Date fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

    
    @Column(name="segundo_nombre")
    public String getSegundoNombre() {
        return this.segundoNombre;
    }
    
    public void setSegundoNombre(String segundoNombre) {
        this.segundoNombre = segundoNombre;
    }

    
    @Column(name="apellido_paterno", nullable=false)
    @NotNull
    public String getApellidoPaterno() {
        return this.apellidoPaterno;
    }
    
    public void setApellidoPaterno(String apellidoPaterno) {
        this.apellidoPaterno = apellidoPaterno;
    }

    
    @Column(name="apellido_materno", nullable=false)
    @NotNull
    public String getApellidoMaterno() {
        return this.apellidoMaterno;
    }
    
    public void setApellidoMaterno(String apellidoMaterno) {
        this.apellidoMaterno = apellidoMaterno;
    }

    
    @Column(name="codigo", nullable=false, length=10)
    @NotNull
    @Length(max=10)
    public String getCodigo() {
        return this.codigo;
    }
    
    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }

    
    @Column(name="usuario", length=30)
    @Length(max=30)
    public String getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(String usuario) {
        this.usuario = usuario;
    }

    
    @Column(name="password", nullable=false, length=20)
    @NotNull
    @Length(max=20)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="persona")
    public Apoderado getApoderado() {
        return this.apoderado;
    }
    
    public void setApoderado(Apoderado apoderado) {
        this.apoderado = apoderado;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="persona")
    public Set<FotoPersona> getFotoPersonas() {
        return this.fotoPersonas;
    }
    
    public void setFotoPersonas(Set<FotoPersona> fotoPersonas) {
        this.fotoPersonas = fotoPersonas;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="persona")
    public Set<Mensaje> getMensajes() {
        return this.mensajes;
    }
    
    public void setMensajes(Set<Mensaje> mensajes) {
        this.mensajes = mensajes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="persona")
    public Set<PersonaMedioContacto> getPersonaMedioContactos() {
        return this.personaMedioContactos;
    }
    
    public void setPersonaMedioContactos(Set<PersonaMedioContacto> personaMedioContactos) {
        this.personaMedioContactos = personaMedioContactos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="personaByIdPersona")
    public Set<Permiso> getPermisosForIdPersona() {
        return this.permisosForIdPersona;
    }
    
    public void setPermisosForIdPersona(Set<Permiso> permisosForIdPersona) {
        this.permisosForIdPersona = permisosForIdPersona;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="persona")
    public Set<MensajeDestinatario> getMensajeDestinatarios() {
        return this.mensajeDestinatarios;
    }
    
    public void setMensajeDestinatarios(Set<MensajeDestinatario> mensajeDestinatarios) {
        this.mensajeDestinatarios = mensajeDestinatarios;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="personaByPersonaIdRegistro")
    public Set<Permiso> getPermisosForPersonaIdRegistro() {
        return this.permisosForPersonaIdRegistro;
    }
    
    public void setPermisosForPersonaIdRegistro(Set<Permiso> permisosForPersonaIdRegistro) {
        this.permisosForPersonaIdRegistro = permisosForPersonaIdRegistro;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="persona")
    public Docente getDocente() {
        return this.docente;
    }
    
    public void setDocente(Docente docente) {
        this.docente = docente;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="persona")
    public Alumno getAlumno() {
        return this.alumno;
    }
    
    public void setAlumno(Alumno alumno) {
        this.alumno = alumno;
    }


    public String obtenerNombreCompleto(){
    	String nombreCompleto =     	getApellidoPaterno() + " " +getApellidoMaterno()  
		+ " "  + getPrimerNombre() ;
    	if ( getSegundoNombre() != null) {nombreCompleto=nombreCompleto+ getSegundoNombre();}
    	return nombreCompleto;
    } 

}


